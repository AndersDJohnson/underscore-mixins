// Generated by CoffeeScript 1.4.0
(function() {
  var _;

  _ = require('underscore');

  (function(root) {
    var __;
    __ = {};
    __.mapFilter = (function() {
      var skip;
      skip = {};
      return function(list, iterator, memo, context) {
        var results;
        results = [];
        _.each(list, (function(value, index, list) {
          var result;
          result = iterator.call(context, skip, value, index, list);
          if (result !== skip) {
            return results.push(result);
          }
        }), context);
        return results;
      };
    })();
    if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
      return module.exports = __.mapFilter;
    } else if (root._ != null) {
      return root._.mixin(__);
    } else {
      return root._ = __;
    }
  })(this);

  /*
  # An earlier implementation - slower but doesn't depend on === object identity.
  mapFilter = do ->
  	(list, iterator, memo, context) ->
  		results = []
  		_.each(list, ((value, index, list) ->
  			skip = false
  			result = iterator.call(context, (->
  				skip = true
  				return
  			), value, index, list)
  			results.push(result) unless skip
  		), context)
  		return results
  */


  /*
  # A test case / example, should return [3, 9]
  m = mapFilter([1,2,3,4], (skip, value) ->
  	if value is 2 or value is 4
  		return skip
  	return value*3
  )
  console.log(m)
  */


}).call(this);
